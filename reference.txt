import { useRef } from "react"
import { PROJECTS } from "../constants"
const Projects = () => {
    const projectsRef = useRef(null)
  return (
    <section className="pt-16" id="projects" ref={projectsRef}>
        <div className="px-4">
            <h2 className="mb-8 text-center text-3xl font-medium lg:text-4xl">
                Projects
            </h2>
            <div className="flex flex-wrap justify-center">
                {PROJECTS.map((project) => (
                    <div key={project.id} className="flex w-full flex-col p-4 md:w-1/2 lg:w-1/3">
                        <div className="flex-grow overflow-hidden rounded-lg border border-purple-300/20">
                           <a href={project.link}
                           target="_blank"
                           rel="noopener noreferrer">
                            <img src={project.imgSrc} alt={project.title} className="h-60 w-full object-cover" />
                           </a>
                           <div className="p-6">
                            <h3 className="mb-2 text-lg font-medium lg:text-2xl">
                                {project.title}
                            </h3>
                            <p className="mb-4">
                                {project.description}
                            </p>
                            <div className="mb-4">
                                <strong>Tech Stack:</strong>
                                <ul>
                                    {project.techStack.map((tech, index) => (
                                        <li key={index} className="mb-1 mr-2 inline-block rounded-full border-2 border-pink-500/30 px-3 py-1 text-sm font-semibold">
                                            {tech}
                                        </li>
                                    ))}
                                </ul>
                            </div>
                           </div>
                        </div>
                    </div>
                )
            )}
            </div>
        </div>
    </section>
  )
}

export default Projects




Developed a social media app with user profi les, post likes & comments, friend connections, and real-time messaging.Created an eCommerce website featuring product listings, shopping cart, and user authentication.



Developed the frontend of the company's personal code editor website.Collaborated with frontend and backend teams for seamless integration.Enhanced user experience through responsive design and performance optimization.


Built a responsive tribute page using HTML and Tailwind CSS framework.Developed a task management app with features for task creation, tracking, and status updates.


<-------------PROJECTS------------->


import { useEffect, useRef } from "react";
import { PROJECTS } from "../constants";
import { RiArrowRightUpLine } from "@remixicon/react";
import { gsap } from "gsap"
import { ScrollTrigger } from "gsap/ScrollTrigger";

gsap.registerPlugin(ScrollTrigger)

const Projects = () => {
    const projectsRef = useRef(null);

    useEffect(() => {
        const ctx = gsap.context(() => {
            gsap.fromTo(".project-card", {
                opacity: 0,
                y: 50,
                duration: 1,
                ease: "power3.out",
                stagger: 0.3,
                scrollTrigger: {
                    trigger: projectsRef.current,
                    start: "top 80%",
                    toggleActions: "play none none none",
                }
            })
        }, projectsRef);
        return () => ctx.revert();
    }, [])

    return (
        <section className="pt-16" id="projects" ref={projectsRef}>
            <div className="px-4">
                <h2 className="mb-8 text-center text-3xl font-medium lg:text-4xl">
                    Projects
                </h2>
                <div className="flex flex-wrap justify-center">
                    {PROJECTS.map((project) => (
                        <div key={project.id} className="project-card flex w-full flex-col p-4 md:w-1/2 lg:w-1/3">
                            <div className="flex-grow overflow-hidden rounded-lg border border-purple-300/20">
                                <a href={project.link} target="_blank" rel="noopener noreferrer">
                                    <img src={project.imgSrc} alt={project.title} className="h-60 w-full object-cover" />
                                </a>
                                <div className="p-6">
                                    <h3 className="mb-2 text-lg font-medium lg:text-2xl">
                                        {project.title}
                                    </h3>
                                    <p className="mb-4">
                                        {project.description}
                                    </p>
                                    <div className="mb-4">
                                        <strong>Tech Stack:</strong>
                                        <ul className="flex flex-wrap">
                                            {project.techStack.map((tech, index) => (
                                                <li key={index} className="mb-1 mr-2 inline-block rounded-full border-2 border-pink-500/30 px-3 py-1 text-sm font-semibold">
                                                    {tech}
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                    <div className="flex mt-4">
                                        <a 
                                            href={project.github} 
                                            target="_blank" 
                                            rel="noopener noreferrer" 
                                            className="inline-flex items-center rounded-full bg-purple-600 px-6 py-2 text-white font-semibold hover:bg-purple-700 transition duration-300">
                                            GitHub 
                                            <RiArrowRightUpLine className="ml-2" />
                                        </a>
                                        <a 
                                            href={project.demo} 
                                            target="_blank" 
                                            rel="noopener noreferrer" 
                                            className="inline-flex items-center rounded-full bg-purple-500 px-6 py-2 text-white font-semibold hover:bg-purple-600 transition duration-300 ml-2">
                                            Demo 
                                            <RiArrowRightUpLine className="ml-2" />
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </section>
    );
}

export default Projects;



<----------CONTACT---------->


import { RiGithubFill, RiLinkedinBoxFill, RiTwitterFill } from "@remixicon/react";
import { useEffect, useRef } from "react";
import { gsap } from "gsap"
import { ScrollTrigger } from "gsap/ScrollTrigger"

gsap.registerPlugin(ScrollTrigger)

const Contact = () => {
    const contactRef = useRef(null);
    
    useEffect(() => {
        const ctx = gsap.context(() => {
            gsap.from(".contact-text", {
                opacity: 0,
                y: 30,
                duration: 1,
                ease: "power3.out",
                scrollTrigger: {
                    trigger: contactRef.current,
                    start: "top 80%",
                    toggleActions: "play none none none",
                }
            })

            gsap.from(".contact-icon", {
                opacity: 0,
                y: 20,
                duration: 1,
                ease: "power3.out",
                stagger: 0.4,
                scrollTrigger: {
                    trigger: contactRef.current,
                    start: "top 80%",
                    toggleActions: "play none none none",
                }
            })


        }, contactRef)
        
        return () => ctx.revert()
    }, [])

    
    return (
        <section className="py-16" id="contact" ref={contactRef}>
            <div className="px-4 text-center">
                <h2 className="contact-text mb-8 text-3xl font-medium lg:text-4xl">Contact</h2>
                <p className="contact-text mb-4 text-lg lg:text-xl">
                    Feel free to reach out to me via e-mail:{" "}
                    <a href="mailto:kanhaiyaakumarr4@gmail.com" className="border-b">
                        kanhaiyaakumarr4@gmail.com
                    </a>
                </p>
                <div className="mt-8 flex justify-center space-x-6">
                    <a 
                        href="https://www.linkedin.com/in/tfkanhaiya" 
                        target="_blank" 
                        rel="noopener noreferrer" 
                        className="contact-icon" 
                        aria-label="Visit my LinkedIn profile"
                    >
                        <RiLinkedinBoxFill className="text-3xl" />
                    </a>
                    <a 
                        href="https://github.com/tfkanhaiya" 
                        target="_blank" 
                        rel="noopener noreferrer" 
                        className="contact-icon" 
                        aria-label="Visit my GitHub profile"
                    >
                        <RiGithubFill className="text-3xl" />
                    </a>
                    <a 
                        href="https://twitter.com/tfkanhaiya" 
                        target="_blank" 
                        rel="noopener noreferrer" 
                        className="contact-icon" 
                        aria-label="Visit my Twitter profile"
                    >
                        <RiTwitterFill className="text-3xl" />
                    </a>
                </div>
            </div>
        </section>
    );
};

export default Contact;




<----------SKILLS---------->

import { useEffect, useRef } from "react";
import { SKILLS } from "../constants";
import { gsap } from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";

gsap.registerPlugin(ScrollTrigger)

const Skills = () => {
  const skillsRef = useRef(null);

  useEffect(() => {
    const ctx = gsap.context(() => {
      gsap.from(".skill-item", {
        opacity: 0,
        y: 50,
        duration: 1,
        ease: "power3.out",
        stagger: 0.2,
        scrollTrigger: {
          trigger: skillsRef.current,
          start: "top 80%",
          toggleActions: "play none none none",
        }
      })
    }, skillsRef)
    return () => ctx.revert()
  }, [])
  
  return (
    <section className="py-16" id="skills" ref={skillsRef}>
      <div className="px-4">
        <h2 className="mb-8 text-center text-3xl font-medium lg:text-4xl">
          Skills
        </h2>
        <div className="grid grid-cols-2 gap-8 md:grid-cols-3 lg:grid-cols-4">
          {SKILLS.map((skill, index) => (
            <div key={index} className="skill-item flex flex-col items-center text-center">
              <div className="mb-4 text-4xl">
                {skill.icon}
              </div>
              <h3 className="mb-2 text-lg font-medium lg:text-xl">
                {skill.name}
              </h3>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Skills;




<---------PROJECTS SECTION---------->


import { useEffect, useRef } from "react";
import { PROJECTS } from "../constants"; 
import { RiArrowRightUpLine } from "@remixicon/react";
import { gsap } from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";

// Register ScrollTrigger plugin
gsap.registerPlugin(ScrollTrigger);

const Projects = () => {
  const projectsRef = useRef(null);

  useEffect(() => {
    if (!projectsRef.current) return;

    const ctx = gsap.context(() => {
      gsap.fromTo(
        ".project-card",
        {
          opacity: 0,
          y: 50,
        },
        {
          opacity: 1,
          y: 0,
          duration: 1,
          ease: "power3.out",
          stagger: 0.3,
          scrollTrigger: {
            trigger: projectsRef.current,
            start: "top 80%",
            toggleActions: "play none none none",
          },
        }
      );
    }, projectsRef);

    // Cleanup function to revert GSAP context when component unmounts
    return () => ctx.revert();
  }, []);

  if (!PROJECTS || PROJECTS.length === 0) {
    return (
      <section className="pt-16" id="projects" ref={projectsRef}>
        <div className="px-4">
          <h2 className="mb-8 text-center text-3xl font-medium lg:text-4xl">
            Projects
          </h2>
          <p className="text-center text-lg">No projects to display.</p>
        </div>
      </section>
    );
  }

  return (
    <section className="pt-16" id="projects" ref={projectsRef}>
      <div className="px-4">
        <h2 className="mb-8 text-center text-3xl font-medium lg:text-4xl">Projects</h2>
        <div className="flex flex-wrap justify-center">
          {PROJECTS.map((project) => (
            <div
              key={project.id}
              className="project-card flex w-full flex-col p-4 md:w-1/2 lg:w-1/3"
            >
              <div className="flex-grow overflow-hidden rounded-lg border border-purple-300/20">
                <a
                  href={project.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label={`View details of ${project.title}`}
                >
                  <img
                    src={project.imgSrc}
                    alt={project.title}
                    className="h-60 w-full object-cover"
                  />
                </a>
                <div className="p-6">
                  <h3 className="mb-2 text-lg font-medium lg:text-2xl">
                    {project.title}
                  </h3>
                  <p className="mb-4">{project.description}</p>
                  <div className="mb-4">
                    <strong>Tech Stack:</strong>
                    <ul className="flex flex-wrap">
                      {project.techStack.map((tech, index) => (
                        <li
                          key={index}
                          className="mb-1 mr-2 inline-block rounded-full border-2 border-pink-500/30 px-3 py-1 text-sm font-semibold"
                        >
                          {tech}
                        </li>
                      ))}
                    </ul>
                  </div>
                  <div className="flex mt-4">
                    <a
                      href={project.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="inline-flex items-center rounded-full bg-purple-600 px-6 py-2 text-white font-semibold hover:bg-purple-700 transition duration-300"
                      aria-label={`View ${project.title} GitHub repository`}
                    >
                      GitHub
                      <RiArrowRightUpLine className="ml-2" />
                    </a>
                    <a
                      href={project.demo}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="inline-flex items-center rounded-full bg-purple-500 px-6 py-2 text-white font-semibold hover:bg-purple-600 transition duration-300 ml-2"
                      aria-label={`View live demo of ${project.title}`}
                    >
                      Demo
                      <RiArrowRightUpLine className="ml-2" />
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Projects;


Built a generative AI app utilizing the Google Gemini API to create dynamic and interactive user experiences. Integrated real-time AI responses and interactions using React JS for seamless user engagement.


Developed VirtualR, a virtual software platform featuring a modern landing page for a company, utilizing React.js with Vite for fast development and Tailwind CSS for responsive design.















